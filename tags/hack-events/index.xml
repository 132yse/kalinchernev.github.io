<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hack Events on Kalin Chernev</title>
    <link>https://kalinchernev.github.io/tags/hack-events/index.xml</link>
    <description>Recent content in Hack Events on Kalin Chernev</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>All rights reserved - 2017</copyright>
    <atom:link href="https://kalinchernev.github.io/tags/hack-events/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Coding battle with Skygate @MolenGeek</title>
      <link>https://kalinchernev.github.io/coding-battle-molengeek/</link>
      <pubDate>Sat, 09 Jul 2016 00:00:00 +0200</pubDate>
      
      <guid>https://kalinchernev.github.io/coding-battle-molengeek/</guid>
      <description>

&lt;p&gt;The last event from the series of coding battles organized by &lt;a href=&#34;https://www.philos.io/&#34;&gt;Philos&lt;/a&gt;, this time in cooperation with Skygate on a life-saving topic using tools like Google Maps and Firebase.&lt;/p&gt;

&lt;h4 id=&#34;introduction&#34;&gt;Introduction&lt;/h4&gt;

&lt;p&gt;&lt;a href=&#34;https://twitter.com/denisomelcenco&#34;&gt;Denis Omelcenco&lt;/a&gt; from Skygate presented the challenge: make an app to locate the closest defibrillator. The initial code base contained helpful starting materials such as a &lt;a href=&#34;https://github.com/DenisSkygate/CodingBattle/blob/master/Defibrillators.json&#34;&gt;JSON file listing the defibrillators&lt;/a&gt; and their locations, together with some &lt;a href=&#34;https://github.com/DenisSkygate/CodingBattle&#34;&gt;HTML files&lt;/a&gt; to facilitate the app building. Also, &lt;a href=&#34;https://twitter.com/maxczet&#34;&gt;Max&lt;/a&gt; provided additional helpful resources on &lt;a href=&#34;https://developers.google.com/maps/&#34;&gt;Google Maps API&lt;/a&gt;, &lt;a href=&#34;https://www.firebase.com/&#34;&gt;Firebase&lt;/a&gt;, etc. As you can imagine, the topic inspired the developers since it&amp;rsquo;s based on meaningful cause.&lt;/p&gt;

&lt;p&gt;In the spirit of &amp;ldquo;Never too early to start&amp;rdquo;, there was a very young participant. I wish this inspires more lads and ladies to join in next events&amp;nbsp;:)&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://cdn-images-1.medium.com/max/800/1*ZiiIav-nONmY-C8LqOIxdw.jpeg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h4 id=&#34;the-tools&#34;&gt;The tools&lt;/h4&gt;

&lt;p&gt;The &lt;strong&gt;Google Maps API&lt;/strong&gt; was the easiest for the developers, probably because it&amp;rsquo;s a popular tool many of us had used before. Needless to say, good start examples were present, together with many answers on the internet on how to handle the various topics like directions, geo-locations, etc.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Firebase&lt;/strong&gt; was a new tool for my team. The tool came super-handy on building an API based on an existing &lt;a href=&#34;https://www.firebase.com/docs/rest/quickstart.html&#34;&gt;JSON really really easy&lt;/a&gt;. The only step necessary was to normalize the key:value pairs to have good naming for the import. Otherwise, we built a RESTful back-end with data about defibrillators in minutes.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://developer.apple.com/swift/&#34;&gt;&lt;strong&gt;Swift&lt;/strong&gt;&lt;/a&gt; was also useful tool for some who decided to build a native app&amp;nbsp;:)&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://cdn-images-1.medium.com/max/800/1*EEgjG4Ja_L5iScKDLYM2Yg.jpeg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h4 id=&#34;winners-and-working-nbsp-apps&#34;&gt;Winners and working&amp;nbsp;apps&lt;/h4&gt;

&lt;p&gt;In the end, there were 2 working apps: the one with Swift, and one with &lt;a href=&#34;https://github.com/DenisSkygate&#34;&gt;the &amp;ldquo;starterkit&amp;rdquo;&lt;/a&gt;. The final presentations of the projects gave some insights on the Google Maps APIs used.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://cdn-images-1.medium.com/max/800/1*A5RYiojFrUUUxRklNiRT8Q.jpeg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h4 id=&#34;time-to-enjoy-the-summer-nbsp&#34;&gt;Time to enjoy the summer&amp;nbsp;:)&lt;/h4&gt;

&lt;p&gt;Next event will be somewhere in September, but it&amp;rsquo;s not fixed yet because of the forthcoming summer months. To get notified for the next editions, just sign in the &lt;a href=&#34;http://www.meetup.com/javascriptlab/&#34;&gt;meetup group&lt;/a&gt; or in the facebook group page.&lt;/p&gt;

&lt;p&gt;Thanks to Philos we saw a growing community and interest of hacking making small useful apps in very short time. Wish them luck and more opportunities for organizing even bigger projects in the future!&amp;nbsp;:)&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://cdn-images-1.medium.com/max/800/1*T1IwXqRxsa26rQ2Wu1Sf8A.jpeg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Coding battle at Microsoft Innovation Center Brussels (The Rise of the Bots)</title>
      <link>https://kalinchernev.github.io/coding-battle-microsoft-innovation-center/</link>
      <pubDate>Thu, 23 Jun 2016 00:00:00 +0200</pubDate>
      
      <guid>https://kalinchernev.github.io/coding-battle-microsoft-innovation-center/</guid>
      <description>

&lt;h1 id=&#34;coding-battle-at-microsoft-innovation-center-brussels-the-rise-of-the-bots&#34;&gt;Coding battle at Microsoft Innovation Center Brussels (The Rise of the Bots)&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;https://medium.com/@kalin.chernev/coding-battle-at-microsoft-innovation-center-brussels-the-rise-of-the-bots-f0887c15e257&#34;&gt;Originally published on Medium&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Continuing on the exciting journey of coding battles and events, this time I&amp;rsquo;m so trilled on what happened that I can&amp;rsquo;t wait to put my hands back to code. So the story will be short and simple, hopefully inspiring for you to try building some cool chat bots and join me in the next coding event.&lt;/p&gt;

&lt;h4 id=&#34;chat-bots-1&#34;&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Chatbot&#34;&gt;Chat Bots&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;Recently, there&amp;rsquo;s been quite some noise around the topic and many companies have already jumped into it — using and developing chat bots. The benefits, as I personally feel them: &lt;em&gt;for users, chat bots are a promise for better user experience, while for developers chat bots are a promise for cool task automation and beautifully integrated event-driven apps&lt;/em&gt;. Of course, the biggest value is when a machine understands natural human communication and responds in a smart and useful way.&lt;/p&gt;

&lt;h4 id=&#34;the-organizers&#34;&gt;The Organizers&lt;/h4&gt;

&lt;p&gt;I have to say this was the best coding event I&amp;rsquo;ve ever been so far. The flow was really smooth, the whole atmosphere was really good, and there were winners with a result in the end, which is a real-life app with purpose.&lt;/p&gt;

&lt;p&gt;The organizing team comprised of &lt;a href=&#34;http://www.carasap.be/en/&#34;&gt;CarASAP&lt;/a&gt;, &lt;a href=&#34;http://www.mic-brussels.be/en/home/&#34;&gt;Microsoft Innovation Center&lt;/a&gt; and &lt;a href=&#34;https://www.philos.io/&#34;&gt;Philos&lt;/a&gt;. Probably because of their good collaboration, the challenge was well prepared — clear problem definition, steps to solve, examples, ongoing support during the event, and last but not least — clear end goal in mind. In short, CarASAP presented their need to automate the process of car ordering for their customers, so that they can receive service via chat. Representatives from Microsoft were going around the room answering questions, showing small steps and debugging together with us — it was really friendly environment.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://cdn-images-1.medium.com/max/800/1*ZVk4GCCCk6zithaBa8I3-Q.jpeg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h4 id=&#34;the-challenge&#34;&gt;The Challenge&lt;/h4&gt;

&lt;p&gt;Participants were provided with a JSON file representing the time schedule of a list of drivers. Thus, the schedule was the base information for our chat bots assisting CarASAP customers to find and order a driver. They were able to input natural sentences which the bot should understand by learning: time, date and address. (Read further to see which is the service used for understanding the natural speech&amp;nbsp;;)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;I think this event was a very good example how a business need can be solved elegantly in very short time with focused effort by a community&lt;/strong&gt;. I believe that this challenge set a good example for other companies to consider working with Philos too. Facilitating community contributions which solve real-life problems is a big thing. The way I see it, this is a Win-Win where developers learn, contribute and have fun, while business benefit resolutions and results.&lt;/p&gt;

&lt;p&gt;In the end of the event, there was a demonstration of the working solution:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://cdn-images-1.medium.com/max/800/1*7OYP5OSbEVuKgF4eIs9Xcw.jpeg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Credits: &lt;a href=&#34;https://www.facebook.com/philos.io/&#34;&gt;Philos&amp;nbsp;Lab&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&#34;tools-amp-best-practices&#34;&gt;Tools &amp;amp; Best Practices&lt;/h4&gt;

&lt;p&gt;There was a lot of sharing during the event!&lt;/p&gt;

&lt;p&gt;From the developers around me I learned about &lt;a href=&#34;https://ngrok.com/&#34;&gt;ngrok&lt;/a&gt;, which was a handy tool to just start and run a local node.js server which is easy to integrate with other systems. It&amp;rsquo;s a time-saver when there&amp;rsquo;s no time to deploy an app to a cloud server. Deployment can be a painful part of the development.&lt;/p&gt;

&lt;p&gt;From the winning team, I got inspired to research &lt;a href=&#34;https://c9.io/&#34;&gt;cloud9&lt;/a&gt; as a tool for collaborating during the next hack event, since it&amp;rsquo;s another way to save from setup and deployment procedures which can lead to errors and frustration. Also, it looks awesome to be able to pair-program in real-time with other developers directly in the editor. Research homework for me&amp;nbsp;:)&lt;/p&gt;

&lt;p&gt;Managing API keys was another common setback for many. All I can say here is that it&amp;rsquo;s just something that has to be handled with care, because if it isn&amp;rsquo;t, it leads to mystical error codes without clear path to resolve. And a lot of time is wasted poking around debugging systems that should just work.&lt;/p&gt;

&lt;p&gt;But don&amp;rsquo;t worry, you are not alone with these issues! Here&amp;rsquo;s a short motivational video that will make you laugh and encourage you to go forward&amp;nbsp;:)&lt;/p&gt;

&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/zFO1cRr5-qY?rel=0&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;For building the bots, we used the &lt;a href=&#34;https://dev.botframework.com/&#34;&gt;Microsoft Bot Framework&lt;/a&gt;. I can&amp;rsquo;t explain you how amazing the APIs are! Just head directly into the &lt;a href=&#34;http://docs.botframework.com/builder/node/overview/#navtitle&#34;&gt;documentation&lt;/a&gt; and skim through some of the example code. I&amp;rsquo;m sure you&amp;rsquo;ll see the easy way to start building functionalities, for which the code looks familiar to other &lt;a href=&#34;http://loopback.io/resources/#compare&#34;&gt;node.js frameworks&lt;/a&gt;. Apart from the core bot framework for managing the communication, we used &lt;a href=&#34;https://www.luis.ai/&#34;&gt;LUIS&lt;/a&gt; to understand the user natural language, and process the important information from it. As a developer, I give my respect to the people who have built the framework and its documentation. It took us just few hours to figure out the APIs and make a working product!&lt;/p&gt;

&lt;h4 id=&#34;apis-are-really-nbsp-cool&#34;&gt;APIs are really&amp;nbsp;cool!&lt;/h4&gt;

&lt;p&gt;I&amp;rsquo;m generally a big fan of &lt;a href=&#34;https://en.wikipedia.org/wiki/Representational_state_transfer&#34;&gt;REST APIs&lt;/a&gt; and everything related to building and consuming them. For me, it&amp;rsquo;s a good architectural approach for decoupling logic and functionality to focus on solving specific problems in a re-usable way. (Yes, the &lt;a href=&#34;http://graphql.org/&#34;&gt;GraphQL&lt;/a&gt; we hear about a lot recently solves some drawbacks of the design, still I think the first wave of common usage will be based on fetching data from existing REST APIs and mainly combining them.)&lt;/p&gt;

&lt;p&gt;What I&amp;rsquo;m saying is that having the opportunity to work with &lt;a href=&#34;http://docs.botframework.com/builder/node/dialogs/LuisDialog/&#34;&gt;LUIS&lt;/a&gt; API is really really cool, especially in a hack event like this coding battle. Using services to solve complex problems feels good, and honestly I think this is the other topic that could be re-used many times, just like building chat bots for various purposes and business cases.&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34; data-lang=&#34;en&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;That&amp;#39;s &lt;a href=&#34;https://twitter.com/hashtag/API?src=hash&#34;&gt;#API&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/management?src=hash&#34;&gt;#management&lt;/a&gt; &lt;a href=&#34;https://t.co/mV5CJD84t7&#34;&gt;pic.twitter.com/mV5CJD84t7&lt;/a&gt;&lt;/p&gt;&amp;mdash; Amancio Bouza (@AmancioBouza) &lt;a href=&#34;https://twitter.com/AmancioBouza/status/738993707140190208&#34;&gt;June 4, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;h4 id=&#34;the-community&#34;&gt;The Community&lt;/h4&gt;

&lt;p&gt;Living in Brussels and following almost every initiative from Philos, I feel that the community around is getting bigger and stronger. Especially because there are opportunities to get together, learn and share! Also, this particular coding battle was an excellent example of good collaboration and focused efforts which brought real-life useful results. I speak about good collaboration between the business side of CarASAP, Microsoft Innovation Center and Philos, but also the good collaboration of developers solving challenges together!&lt;/p&gt;

&lt;h4 id=&#34;what-s-next&#34;&gt;What’s next?&lt;/h4&gt;

&lt;p&gt;First, make sure you sign up for the next coding battle — it’s the last one from the 1st edition of the HackLeague. It sounds to be really flexible on the skills necessary for the challenges, expect a lot of creativity! :)&lt;/p&gt;

&lt;p&gt;HackLeague and Coding Battles were new concepts, but it’s easy to see that they are getting more traction on every step. Just looking at the number of participants increasing and the challenges getting better formulation, I firmly believe in the bright future ahead.&lt;/p&gt;

&lt;p&gt;I also believe that HackLeague will continue to improve, as the community grows and more companies join the game. The more companies, the more interesting problems to tackle, and finally — the more knowledge sharing.&lt;/p&gt;

&lt;p&gt;I can imagine that with enough traction, Philos will be able to possibility develop some sort of divisions based on specific needs and markets: VR, IoT, security, algorithms, you name it. I hope these will come naturally with the upcoming partnerships and collaborations.&lt;/p&gt;

&lt;p&gt;I really liked the way Max presented his vision during the last event:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Let people learn and share with each other, the fun way. In other words: &lt;strong&gt;gamification for people creating the future&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Game on coders!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Coding battle at Take Eat Easy</title>
      <link>https://kalinchernev.github.io/coding-battle-take-eat-easy/</link>
      <pubDate>Thu, 09 Jun 2016 00:00:00 +0200</pubDate>
      
      <guid>https://kalinchernev.github.io/coding-battle-take-eat-easy/</guid>
      <description>

&lt;p&gt;Short retrospective on my second coding competition with JavaScript. Lessons learned and thoughts on how to improve for the future.&lt;/p&gt;

&lt;h4 id=&#34;introduction&#34;&gt;Introduction&lt;/h4&gt;

&lt;p&gt;&lt;a href=&#34;http://www.takeeateasy.be/en/&#34;&gt;Take Eat Easy&lt;/a&gt; and &lt;a href=&#34;https://www.philos.io/&#34;&gt;Philos&lt;/a&gt; organized this coding competition.&lt;/p&gt;

&lt;p&gt;Similarly to &lt;a href=&#34;https://medium.com/@kalin.chernev/the-first-coding-battle-in-belgium-d4f4285ffb32#.ses1gau0l&#34;&gt;the first coding battle&lt;/a&gt;, good news from &lt;a href=&#34;https://twitter.com/maxczet&#34;&gt;Max&lt;/a&gt; came right from the beginning: the event was part of a hack league. For developers, this means that we can hope for continuity of the coding battles: more play, plus more opportunities to interact and share with others from the &lt;a href=&#34;https://twitter.com/jsl4b&#34;&gt;JavaScript community in Belgium&lt;/a&gt;. Few other cities have benefited from similar coding competitions: &lt;a href=&#34;https://twitter.com/maxczet/status/725623059344986112&#34;&gt;Paris&lt;/a&gt; and &lt;a href=&#34;https://twitter.com/maxczet/status/728555974672449536&#34;&gt;London&lt;/a&gt; recently, I am looking forward to see how the wave will grow even further&amp;nbsp;:)&lt;/p&gt;

&lt;p&gt;After this intro, &lt;a href=&#34;http://www.takeeateasy.be/en/about&#34;&gt;Jean-Christophe Libbrecht&lt;/a&gt; presented what Take Eat Easy is in simple words: delivery on time. &lt;a href=&#34;https://github.com/TakeEatEasy/hack-league&#34;&gt;The technical challenge&lt;/a&gt; was presented with focus on the same company values: optimal delivery management. I gotta say that I had a flashback to my university discipline of &lt;a href=&#34;https://en.wikipedia.org/wiki/Operations_research&#34;&gt;operations research&lt;/a&gt; for a minute, when thinking about routes and shortest distance. Luckily, the challenge was easier to understand than the academic subject!&lt;/p&gt;

&lt;p&gt;The overall atmosphere was agréable et la majorité parlèrent en français. Positive support and guidance was coming all the time.&lt;/p&gt;

&lt;h4 id=&#34;the-challenge&#34;&gt;The challenge&lt;/h4&gt;

&lt;p&gt;Quoting an abstract from the problem definition:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You play one of TEE&amp;rsquo;s bike courier&lt;/p&gt;

&lt;p&gt;Your goal is to make as much € as you can&lt;/p&gt;

&lt;p&gt;You compete with other couriers in the city&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&#34;https://cdn-images-1.medium.com/max/800/1*zt3n7YspKUDLmP8Q4lN5qw.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;So, participants had to program a courier bot, which plays with other courier bots in an imaginary city. Taking and delivering orders in an optimal way.&lt;/p&gt;

&lt;p&gt;An example &lt;a href=&#34;https://github.com/TakeEatEasy/hack-league/tree/master/node-client&#34;&gt;node client bot&lt;/a&gt; was given. I find it to be a good boilerplate for a start. Most importantly it&amp;rsquo;s clear where to include the custom logic and what are the tools to use to take actions.&lt;/p&gt;

&lt;p&gt;Another positive prerequisite was &lt;strong&gt;the sample state object&lt;/strong&gt;, which contained enough structure to understand the data that will be received by the client on every turn of the game. Note some important concepts are pretty obvious, I think: &lt;strong&gt;orders, possible actions and score&lt;/strong&gt;.&lt;/p&gt;

&lt;script src=&#34;https://gist.github.com/kalinchernev/d2d3e5e9ade9bca4f8ae94bc58dd5e88.js&#34;&gt;&lt;/script&gt;

&lt;p&gt;&lt;strong&gt;All possible actions&lt;/strong&gt; that the bots were able to play with: moving up/down/left/right, pick order, drop order. There were 2 advanced actions: upgrade fighter (be able to kick other players) and upgrade electric (move doubled).&lt;/p&gt;

&lt;p&gt;I will repeat this again, I was content with the organizers. Help was kindly provided, with hints and advice all the way during the game. That made it fun to play. (No matter the fact that my team didn&amp;rsquo;t manage to get points&amp;nbsp;:)&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://cdn-images-1.medium.com/max/800/1*641YUOoQZYNKW5N2d4G-kw.jpeg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h4 id=&#34;lessons-learned&#34;&gt;Lessons learned&lt;/h4&gt;

&lt;p&gt;I got a good &lt;a href=&#34;https://en.wikipedia.org/wiki/Pair_programming&#34;&gt;pair&lt;/a&gt; for the event. (&lt;a href=&#34;https://github.com/Gregoirevda&#34;&gt;Gregoirevda&lt;/a&gt;) I think we got along easily and we had good time working together. Here are some highlights of the informal retrospective we did after the game.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Visualize the end result (expectation) before going in the code&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We never ran the server &amp;ldquo;city&amp;rdquo; to see how our bot moves. That was not a clear problem until the end of the competition until when we were still working on the details on how to move our courier. &lt;a href=&#34;https://en.wikipedia.org/wiki/Grep&#34;&gt;Grep&lt;/a&gt;-ing the continuously changing state object helped us get some ideas about the dynamics, but honestly it was not easy to imagine how the courier bot is actually moving on the map without the real picture.&lt;/p&gt;

&lt;p&gt;Now I believe it&amp;rsquo;s important to run the server (mock) locally during development just to understand and visualize the dynamics as they will be in the real game.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Learn and understand the start examples and code samples&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In my first competition I made the mistake to try to understand the logic of the core engine (server) running the game, but this time was better focusing on the sample code. Yet, I think we missed useful points and functions that we could have utilized in our favor without thinking too much.&lt;/p&gt;

&lt;p&gt;More specifically, the head of the function that was invoked in every turn of the game contained the following:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;// Fetch my courier and possible order from the state  
var state = data.state;  
var possibleActions = data.possibleActions;  
var myCourier;  
var myOrder;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And guess what? That was prepared for us before-hand so that we could use these variables &amp;ldquo;as-is&amp;rdquo;. I have to say, I was mixing the &lt;code&gt;data&lt;/code&gt; and &lt;code&gt;state&lt;/code&gt; variables pretty much, but that&amp;rsquo;s another topic.&lt;/p&gt;

&lt;p&gt;Another part of the code contained this line:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;// Sample response.
respond(getDirection(data.possibleActions,myCourier.position,{x:1,y:2}));
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;getDirection()&lt;/code&gt; returns the best move depending on the current position and possible actions.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;respond()&lt;/code&gt; is the function to invoke in order to take actions.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;respond()&lt;/code&gt; took us away, because we decided to focus on the actions, and somehow it was pretty late in the game when we figured the getDirection() function for possible re-use.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Strategy and task separation&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Probably the most complex part of all.&lt;/p&gt;

&lt;p&gt;Even though we didn&amp;rsquo;t have clear strategy while developing the bot, it surely would have helped. For example, we started implementing functions for the bonus skills like having an electric bike and kicking other players before deciding how to move and take orders&amp;nbsp;:D&lt;/p&gt;

&lt;p&gt;But seriously, possible strategy for this challenge could probably be to separate the approach in 2: functions for working with distance, and such for working with actions. Though we didn&amp;rsquo;t manage to have a complete combination of actions based on distance and value, we spoke about the fact that we were not clear about the order of combined actions we need to take. We took a delivery and then we were just standing at a place, since the next step was not foreseen. However, we prepared to be able to kick other players just standing there with our delivery in our hands! (we never got the points for the advanced action of kicking)&lt;/p&gt;

&lt;p&gt;I feel that breaking down a challenge into small tasks plays an important role in problem solving, especially in short-time hack event. Also, event handling actions with state management seem to be recurring patterns, so it&amp;rsquo;s worth getting some more practice there too.&lt;/p&gt;

&lt;h4 id=&#34;coming-up&#34;&gt;Coming up&lt;/h4&gt;

&lt;p&gt;Many developers don&amp;rsquo;t go to competitions because they believe they are not good enough with JavaScript or they will not perform well in hack events under stress. Even though there is positive stress, with this retrospective and code samples I hope that I&amp;rsquo;ve managed to demonstrate that the challenge itself was doable and fun to do.&lt;/p&gt;

&lt;p&gt;The &lt;a href=&#34;https://www.eventbrite.com/e/coding-battle-microsoft-innovation-center-brussels-carasap-tickets-25839985091&#34;&gt;next coding battle will be at Microsoft&lt;/a&gt; and the event is open for registrations. I&amp;rsquo;d recommend you to grab the opportunity to broaden your experience.&lt;/p&gt;

&lt;p&gt;Lastly, consider inviting your colleagues to join you too. As you can imagine, the short hacking time will naturally give you ideas on how to communicate effectively with your colleagues when you work together in different environment. Also, you will see new ways to break down tasks and problem solve by observing and sharing with other developers you meet at the event.&lt;/p&gt;

&lt;h4 id=&#34;what-do-you-nbsp-think&#34;&gt;What do you&amp;nbsp;think?&lt;/h4&gt;

&lt;p&gt;I&amp;rsquo;m really interested to hear feedback on my thoughts and ideas about the code and the highlights. Maybe you have a different point of view? Share it in the comments!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The first coding battle in Belgium</title>
      <link>https://kalinchernev.github.io/first-coding-battle-belgium/</link>
      <pubDate>Thu, 14 Apr 2016 00:00:00 +0200</pubDate>
      
      <guid>https://kalinchernev.github.io/first-coding-battle-belgium/</guid>
      <description>

&lt;h2 id=&#34;coding-battle-what&#34;&gt;Coding? Battle? What?&lt;/h2&gt;

&lt;p&gt;For me, coding is an act of expressing ways of thinking and problem-solving skills. However, in reality, it&amp;rsquo;s a more than that. It&amp;rsquo;s a proof of understanding complex concepts, and creating useful solutions with this understanding. Also, in fact, coding is frequently an act of showing narrow knowledge of a specific framework or knowledge of an API.&lt;/p&gt;

&lt;p&gt;Battles, on the other hand, are not an every-day thing. Rap battles and games are fun though, why not take the same experience into another subject matter as an expression of quick-thinking and winning attitude?&lt;/p&gt;

&lt;p&gt;Combining those, one can already enjoy online platforms like &lt;a href=&#34;https://codefights.com/&#34;&gt;codefights.com&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;What happens in offline, face-to-face world though?&lt;/p&gt;

&lt;h4 id=&#34;coding-battle&#34;&gt;Coding battle&lt;/h4&gt;

&lt;p&gt;That&amp;rsquo;s an opportunity to get experience actively. Battling is not only about watching a presentation, but solving problems. Quickly. And effectively.&lt;/p&gt;

&lt;p&gt;Going into a battle is a learning experience.&lt;/p&gt;

&lt;h4 id=&#34;the-organizers&#34;&gt;The organizers&lt;/h4&gt;

&lt;p&gt;&lt;a href=&#34;https://www.philos.io/&#34;&gt;Philos Lab&lt;/a&gt; is a frequent organizer of &lt;a href=&#34;http://www.meetup.com/javascriptlab/&#34;&gt;JavaScript events&lt;/a&gt; around Belgium, Netherlands, Luxembourg and France.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.woorank.com/&#34;&gt;Woorank&lt;/a&gt; is a product-oriented company who kindly prepared the challenges and hosted the battle.&lt;/p&gt;

&lt;p&gt;Together, they organized the first coding battle in Brussels.&lt;/p&gt;

&lt;h4 id=&#34;the-battle&#34;&gt;The battle&lt;/h4&gt;

&lt;p&gt;It was more enjoyable than you might think.&lt;/p&gt;

&lt;p&gt;Honestly, I was doubtful about my own skills and readiness to go into a competition. That&amp;rsquo;s because JavaScript is changing every day, learning fatigue is something normal.&lt;/p&gt;

&lt;p&gt;In this competition, developers had to program a bot, playing against a dealer bot based on this &lt;a href=&#34;https://github.com/Woorank/blackjack-challenge&#34;&gt;blackjack challenge&lt;/a&gt;. The rules were simple, there were teams (4 rounds by 4), playing against each other on playoffs principle. The better ratio of games won vs games lost ruled winning teams to the top.&lt;/p&gt;

&lt;p&gt;Personally, I enjoyed the challenge. It didn&amp;rsquo;t require any previous knowledge of frameworks like Angular or React, but rather assumed general knowledge: variables, scope, functions and loops. That was really important in terms of facilitating the teams to focus on strategic thinking programming their automated bots, rather frameworks.&lt;/p&gt;

&lt;p&gt;I believe these characteristics of the challenge were truly important. In the end, it was not really about whether or not developers know JavaScript or frameworks deeply, but rather: can developers understand requirements, code and logic quickly (2 hours and 30 minutes :), and provide solutions based on mathematics.&lt;/p&gt;

&lt;h4 id=&#34;what-did-i-nbsp-learn&#34;&gt;What did I&amp;nbsp;learn&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;1. Re-consider understanding the core algorithms&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Out of 2 hours and 30 minutes, I spent maybe around 40 minutes trying to figure out the structure of the code of the &amp;ldquo;dealer&amp;rdquo;. (the server) That might have been useful if I knew specifically that my results/winning will be evaluated based on understanding other people&amp;rsquo;s code. That&amp;rsquo;s not impossible, but takes a lot of time! Take-away: listen carefully for the expectations. Reading and understanding API-s as-is is not helping in a battle.&lt;/p&gt;

&lt;p&gt;Maybe it&amp;rsquo;s useful to know the subject matter of the challenge, i.e. blackjack. Though every challenge will be different, I wouldn&amp;rsquo;t focus on this in my next challenge.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Focus on super-clear communication&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It happens every day, it happens in battles as well — discussing scope, persistence and making use of history of actions for future actions. There is no place for bad communication in a battle. Global scope is so much not an object scope. And dependency injection is not always possible, don&amp;rsquo;t take it for granted.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Focus on mathematics&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Even though I don&amp;rsquo;t take myself as an expert in algorithms, making mathematical model of if-else-s is important. Me and my team-mate did not have any idea what a blackjack is, but we googled for strategies we translated into mathematics we implemented: and we ended up in the finals. You really have to experience this to believe it: creating code with clear mathematics that solves problems for you is beautiful.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. Team-work is important&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;No need to go too deep into this. I was lucky with this one during the particular event. I worked together with a colleague I work with every day&amp;nbsp;:)&lt;/p&gt;

&lt;p&gt;Splitting down the small details was a breeze: which functions should do what, why, how, etc. The action was so hot that at some point using the &amp;ldquo;&lt;a href=&#34;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Statements/for...of&#34;&gt;for of&lt;/a&gt;&amp;rdquo; syntax fit perfectly for the general foreach() equivalent for the major chunk for the decider logic. Believe me, there is no time to re-factor, questions like sugar in JS: Class vs Function, public method of a module vs private method of an instance are too tiny of topics in dynamic circumstances.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://kalinchernev.github.io/images/coding-battle-code.jpeg&#34; alt=&#34;Team work during coding event&#34; /&gt;&lt;/p&gt;

&lt;h4 id=&#34;community&#34;&gt;Community&lt;/h4&gt;

&lt;p&gt;In overall, the big winning was absolutely going into the community.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://kalinchernev.github.io/images/coding-battle-community.jpeg&#34; alt=&#34;Community&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Good-bye picture at the spacious Woorank&amp;nbsp;office&lt;/p&gt;

&lt;h4 id=&#34;bragging-time&#34;&gt;Bragging time&lt;/h4&gt;

&lt;p&gt;In this competition, my team reached the finals, team-6&amp;nbsp;;)&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://kalinchernev.github.io/images/coding-battle-table.jpeg&#34; alt=&#34;Blackjack table&#34; /&gt;&lt;/p&gt;

&lt;p&gt;This is the &amp;ldquo;table&amp;rdquo; server where bots (teams) play against a dealer&amp;nbsp;(bot)&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>