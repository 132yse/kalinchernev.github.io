<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Drupal on Kalin Chernev</title>
    <link>https://kalinchernev.github.io/tags/drupal/index.xml</link>
    <description>Recent content in Drupal on Kalin Chernev</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>All rights reserved - 2017</copyright>
    <atom:link href="https://kalinchernev.github.io/tags/drupal/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Drupal 8 on Cloud9 IDE</title>
      <link>https://kalinchernev.github.io/drupal8-cloud9-ide/</link>
      <pubDate>Thu, 15 Sep 2016 00:00:00 +0200</pubDate>
      
      <guid>https://kalinchernev.github.io/drupal8-cloud9-ide/</guid>
      <description>

&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;You see things; and you say, &amp;lsquo;Why?&amp;rsquo; But I dream things that never were; and I say, &amp;lsquo;Why not?&amp;ldquo; — George Bernard Shaw&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&#34;https://www.drupal.org/8&#34;&gt;Drupal 8&lt;/a&gt; will soon celebrate 1 year since its release. One interesting fact about this version of the popular PHP CMS is that the &lt;a href=&#34;https://www.drupal.org/core/release-cycle-overview&#34;&gt;release cycles&lt;/a&gt; are smaller and feature-focused. This makes everybody happier than previous major versions and I will focus on developers&amp;rsquo; experience. It&amp;rsquo;s been steadily improving since the focused adoption of popular and well-maintained projects from the wide PHP community. &lt;a href=&#34;https://getcomposer.org/&#34;&gt;Composer&lt;/a&gt;, &lt;a href=&#34;https://drupalconsole.com/&#34;&gt;Drupal Console&lt;/a&gt; (an implementation of Symfony Console) and adopting PHP OOP design patterns in overall are some of the highlights in this article.&lt;/p&gt;

&lt;p&gt;On the other hand, &lt;a href=&#34;http://c9.io&#34;&gt;Cloud9 Editor&lt;/a&gt; is an interesting project to my personal experience as a developer. I&amp;rsquo;ve shared some enthusiasm about it before, summarizing &lt;a href=&#34;https://medium.com/@kalin.chernev/cloud9-ide-6e26940c6130#.nxqgf2ree&#34;&gt;some of my favorite features&lt;/a&gt;, and going deeper into &lt;a href=&#34;https://medium.com/@kalin.chernev/debugging-node-js-in-cloud9-ide-59712c043fb2#.tknem3kcp&#34;&gt;debugging applications in the cloud&lt;/a&gt;. At this step, I start to dream about scenarios where this cloud editor will be THE editor for massive amount of open source contributors, experimenters and agile practitioners alike. I also visualize scenarios where it could fill in the gap in the hearts of many who use tools like &lt;a href=&#34;https://dreditor.org/&#34;&gt;dreditor&lt;/a&gt;. Dreditor on steroids: git, drush, mysql, php, etc — all the tools a developer needs to start, test, develop and deploy!&lt;/p&gt;

&lt;h3 id=&#34;repository-based-development-environment&#34;&gt;Repository based development environment&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/drupal-composer/drupal-project&#34;&gt;Drupal Composer&amp;rsquo;s drupal-project&lt;/a&gt; seems like a really interesting repository which can enable me to start a Drupal 8 project and make an installation. Also it will provide me with a door of opportunities to manage all my project-global dependencies via composer.&lt;/p&gt;

&lt;p&gt;Here&amp;rsquo;s what I can do to start a &lt;a href=&#34;https://docs.c9.io/docs/getting-started&#34;&gt;Cloud9 workspace&lt;/a&gt; linked my own fork repository of the drupal-project.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Forked the original repo to my own &lt;a href=&#34;https://github.com/kalinchernev/drupal-project&#34;&gt;drupal-project repo&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Create a new workspace pointing to the my fork repo.&lt;/li&gt;
&lt;li&gt;Selecting template &amp;ldquo;The popular stack in shiny cloud wrappings: Apache, PHP5 and MySQL pre-configured&amp;rdquo; seems ok for the moment.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This should look similar to:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://cdn-images-1.medium.com/max/800/1*nbj-D9ufx-wlGZ-MdBj6Jw.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Creating my new development environment&lt;/p&gt;

&lt;p&gt;At the end of this process, I have an &lt;a href=&#34;http://www.ubuntu.com/&#34;&gt;Ubuntu&lt;/a&gt;-based &lt;a href=&#34;https://www.docker.com/&#34;&gt;docker&lt;/a&gt; container. In it, there is a local repository linked to my upstream repository on the origin. I&amp;rsquo;m ready to use the tools I know in Linux because composer, npm, node, etc. are already installed, and I also have a command line interface to run or install anything I need on top of this initial setup. As a side note, &lt;a href=&#34;https://c9.io/community/templates&#34;&gt;custom templates&lt;/a&gt; will soon make this initial setup even more flexible and personalized.&lt;/p&gt;

&lt;p&gt;As the terminal is already open for you, run &lt;code&gt;git remote -v&lt;/code&gt; to ensure this origin linking if you like.&lt;/p&gt;

&lt;h3 id=&#34;selecting-drupal-nbsp-8&#34;&gt;Selecting Drupal&amp;nbsp;8&lt;/h3&gt;

&lt;p&gt;Now that the workspace is ready, you have to select a branch for the Drupal version you are going to work with. I&amp;rsquo;m going to do &lt;code&gt;git checkout 8.x&lt;/code&gt; in the ternimal to use the 8.x version of the the repository files in the container machine. When you do that, you&amp;rsquo;ll see the files in the tree.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://cdn-images-1.medium.com/max/800/1*Eoo2-TstzN_2AtY1m4kagw.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Drupal 8 branch of the repository&lt;/p&gt;

&lt;p&gt;These are the source files I can use to build the project with the dependencies and the tools of my personal preference.&lt;/p&gt;

&lt;h3 id=&#34;building-project-dependencies&#34;&gt;Building project dependencies&lt;/h3&gt;

&lt;p&gt;The dependencies can be &lt;a href=&#34;https://getcomposer.org/doc/00-intro.md#dependency-management&#34;&gt;managed globally for the project&lt;/a&gt; via the composer.json file. What interests me the most are the Drupal, Drupal Console and Drush which are already &lt;a href=&#34;https://getcomposer.org/doc/01-basic-usage.md#the-require-key&#34;&gt;required&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://cdn-images-1.medium.com/max/800/1*3AcZBLBGsVdelfdFPJcmMw.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Drupal-specific initial dependencies.&lt;/p&gt;

&lt;p&gt;As the readme file of the repo points out, additional dependencies can be added later by &lt;a href=&#34;https://getcomposer.org/doc/01-basic-usage.md#installing-dependencies&#34;&gt;installing dependencies through the composer&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Run &lt;code&gt;composer install&lt;/code&gt; in the terminal to download all the dependencies and run all the composer special things defined in the composer.json file.&lt;/p&gt;

&lt;p&gt;When all downloads are finished — you can just run the Run button and start the apache server in the machine to open the project in the project browser or your own browser:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://cdn-images-1.medium.com/max/800/1*Wk4VtthU1g6TbvI70Q7u3Q.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Open the project in the browser after the dependencies installation.&lt;/p&gt;

&lt;p&gt;If you resist your perfectionist nature and expectations on domain names, now you can open the project at &lt;a href=&#34;https://%7Bprojectname%7D-%7Busername%7D.c9users.io/web/core/install.php&#34;&gt;https://{projectname}-{username}.c9users.io/web/core/install.php&lt;/a&gt; replacing the variables of course. And there you go, you have Drupal 8 ready for your install!&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://cdn-images-1.medium.com/max/800/1*ZOtYTj11S-Mi9h_894NoMA.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Yep, the wizard is&amp;nbsp;ready!&lt;/p&gt;

&lt;h3 id=&#34;installing-the-nbsp-project&#34;&gt;Installing the&amp;nbsp;project&lt;/h3&gt;

&lt;p&gt;I deliberately left this out from the previous one. You can, of course, continue with the installation in the most user-friendly way with the wizard above. Classical and easy and you don&amp;rsquo;t worry even for file permissions. If you are a databases guy, probably you&amp;rsquo;ll be interested to check the tutorial for &lt;a href=&#34;https://community.c9.io/t/setting-up-mysql/1718&#34;&gt;setting up mysql&lt;/a&gt; and/or &lt;a href=&#34;https://docs.c9.io/docs/setup-a-database&#34;&gt;setting up a database&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Another option for making the installation is using the command line interface and Drupal Console. If you&amp;rsquo;re a non-idealist developer, you can directly run the binary from the vendor folder like &lt;code&gt;/vendor/bin/drupal&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://cdn-images-1.medium.com/max/800/1*dx0IRYUqpwRv512zYSBGJg.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Drupal Console initialization&lt;/p&gt;

&lt;p&gt;This will hint you to run an initial setup for the tool, just do it and then you can have &lt;a href=&#34;https://hechoendrupal.gitbooks.io/drupal-console/content/en/commands/site-install.html&#34;&gt;&lt;code&gt;vendor/bin/drupal site:install&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;For more ideas around this installation step, check &lt;a href=&#34;https://drupalconsole.com/articles/how-to-download-and-install-drupal-8-using-drupal-console&#34;&gt;this tutorial&lt;/a&gt; which also includes steps to download the project if it was not done by Composer.&lt;/p&gt;

&lt;p&gt;Shooting some ideas of a quick-start yml file for the &lt;a href=&#34;https://docs.drupalconsole.com/en/commands/chain.html&#34;&gt;`chain&lt;/a&gt;`.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;commands:
# Install Drupal
  - command: site:install
    options:
      langcode: &#39;en&#39;
      db-type: &#39;%{{db_type|mysql}}&#39;
      db-host: &#39;%{{db_host|127.0.0.1}}&#39;
      db-name: &#39;%{{db_name|c9}}&#39;
      db-user: &#39;%{{db_user|root}}&#39;
      db-pass: &#39;%{{db_pass|}}&#39;
      db-port: &#39;%{{db_port|3306}}&#39;
      site-name: &#39;Drupal 8 site&#39;
      site-mail: &#39;admin@example.org&#39; # default email
      account-name: &#39;admin&#39; # default account
      account-mail: &#39;admin@example.org&#39; # default email
      account-pass: &#39;admin&#39; # default pass
    arguments:
      profile: &#39;standard&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;debugging&#34;&gt;Debugging&lt;/h3&gt;

&lt;p&gt;A small helper subject after the setup — since xdebug is available in the docker in &amp;ldquo;Apache &amp;amp; PHP&amp;rdquo; runner, there is a way to debug apps.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Start &amp;ldquo;Apache &amp;amp; PHP&amp;rdquo; runner with debugger on:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;https://cdn-images-1.medium.com/max/800/1*ksgXbNGH5Lp_HtVdLoQWMA.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;The green debugger button is the important detail to&amp;nbsp;notice.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Set a break-point and open the application to trigger a request:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;https://cdn-images-1.medium.com/max/800/1*26fDzn9eaCW1fwMcB9BSEQ.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;The app can be run either in preview in the IDE or in another&amp;nbsp;tab.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Inspect the state of the system and profit from deeper understanding&amp;nbsp;:)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;https://cdn-images-1.medium.com/max/800/1*lfPKCwwocB8NkegBzv7fOA.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Use the inspector for observing both global and local&amp;nbsp;scopes.&lt;/p&gt;

&lt;p&gt;Note that the runner properties can be edited:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://cdn-images-1.medium.com/max/800/1*m1WawXoob6Jg7DiUIlN9hg.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Runners are editable.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;// This file overrides the built-in Apache httpd (PHP, HTML) runner
// For more information see http://docs.c9.io:8080/#!/api/run-method-run
{
  &amp;quot;cmd&amp;quot;: [
    &amp;quot;run-apache2&amp;quot;,
    &amp;quot;${debug?debug}&amp;quot;
  ],
  &amp;quot;cmdStop&amp;quot;: [
    &amp;quot;run-apache2&amp;quot;,
    &amp;quot;stop&amp;quot;
  ],
  &amp;quot;debugger&amp;quot;: &amp;quot;xdebug&amp;quot;,
  &amp;quot;debugport&amp;quot;: 9000,
  &amp;quot;$debugDefaultState&amp;quot;: false,
  &amp;quot;selector&amp;quot;: &amp;quot;^.*\\.(php|phtml|html|shtml)$&amp;quot;,
  &amp;quot;env&amp;quot;: {
    &amp;quot;XDEBUG_CONFIG&amp;quot;: &amp;quot;xdebug.remote_enable=1 idekey=cloud9ide remote_host=localhost remote_port=9000 remote_mode=req&amp;quot;
  },
  &amp;quot;info&amp;quot;: &amp;quot;Starting Apache httpd, serving \\033[01;34m$hostname_path\\033[00m.&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;conclusions&#34;&gt;Conclusions&lt;/h3&gt;

&lt;p&gt;It&amp;rsquo;s an ambitious initiative/dream to work with Drupal 8 projects in the cloud but you see that it&amp;rsquo;s possible and easy. In the end of this tutorial you have a working instance built out of a composer-based dependency management system, your custom repository, and the vital tools to help you develop well: Drupal Console, Drush and any other script you can think of that run on an Ubuntu machine.&lt;/p&gt;

&lt;p&gt;Now it&amp;rsquo;s up to you to use these tools to your best interest: teaching Drupal 8 interactively, pair-programming, &lt;a href=&#34;https://www.drupal.org/contributor-tasks/triage-novice-issues&#34;&gt;triage&lt;/a&gt; issues by making/testing patches or just experimenting with features you&amp;rsquo;re interested in anywhere, anytime.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Cloud9 IDE</title>
      <link>https://kalinchernev.github.io/cloud9-editor/</link>
      <pubDate>Mon, 29 Aug 2016 00:00:00 +0200</pubDate>
      
      <guid>https://kalinchernev.github.io/cloud9-editor/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;https://cdn-images-1.medium.com/max/800/1*uc-REJYHbk02nuzVQmDHHQ.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Few months ago I attended a &lt;a href=&#34;https://medium.com/@kalin.chernev/coding-battle-at-microsoft-innovation-center-brussels-the-rise-of-the-bots-f0887c15e257&#34;&gt;coding competition&lt;/a&gt;. In the end of the event the winners demonstrated one of their tools: the &lt;a href=&#34;https://c9.io&#34;&gt;Cloud9 editor&lt;/a&gt;. Then it hit me — I had to experiment with it! Later I used it working on various projects in my free time. Here I&amp;rsquo;m going to share my experience so far — I&amp;rsquo;m a happy user&amp;nbsp;:)&lt;/p&gt;

&lt;h3 id=&#34;cloud9-is-nbsp-great&#34;&gt;Cloud9 is&amp;nbsp;great&lt;/h3&gt;

&lt;p&gt;So far, I&amp;rsquo;ve found several key points/facts why I consider the editor to be truly astounding tool:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Accessibility and User/Developer experience&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Pair_programming&#34;&gt;Pair programming&lt;/a&gt; and education&lt;/li&gt;
&lt;li&gt;Collaboration and open source&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;accessibility&#34;&gt;Accessibility&lt;/h3&gt;

&lt;p&gt;The tool is currently &lt;a href=&#34;https://c9.io/pricing&#34;&gt;free&lt;/a&gt; and &lt;a href=&#34;https://github.com/c9&#34;&gt;open source&lt;/a&gt;. Even if you&amp;rsquo;re not a technical person you already have reason #1 to either make a &lt;a href=&#34;https://c9.io/signup&#34;&gt;new registration&lt;/a&gt; or use your existing code-oriented account to &lt;a href=&#34;https://c9.io/login&#34;&gt;log in&lt;/a&gt; to the service. (No affiliation in the links) If you are non-technical, but very business person, you might know that &lt;a href=&#34;https://c9.io/blog/great-news/&#34;&gt;Amazon will probably grow Cloud9 in the future&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;On the other hand, if you are a technical person and you take a closer look, you&amp;rsquo;ll see that it&amp;rsquo;s a charming service of &lt;a href=&#34;https://ace.c9.io/#nav=about&#34;&gt;ace&lt;/a&gt; which directly accesses &lt;a href=&#34;https://www.docker.com/&#34;&gt;docker&lt;/a&gt; instances. The first time I showed a working &lt;a href=&#34;https://docs.c9.io/docs/create-a-workspace&#34;&gt;workspace&lt;/a&gt; to a friend developer telling him to use the environment just as Ubuntu — the response was something like&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://cdn-images-1.medium.com/max/800/1*DBGdHlkB6DVjBy62d3TANQ.gif&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Later, he setup all his bash aliases and specific configurations and started to work with the terminal just as he&amp;rsquo;s working with his own Linux machine&amp;nbsp;:)&lt;/p&gt;

&lt;h3 id=&#34;pair-programming-and-education&#34;&gt;Pair programming and education&lt;/h3&gt;

&lt;p&gt;As soon as the environment was ready (understand having all the aliases and custom shell scripts, drush, drupal console, etc. cli tools) we went into using some of the &lt;a href=&#34;https://docs.c9.io/docs/share-a-workspace#section-collaboration-features&#34;&gt;collaboration features&lt;/a&gt;. I will not put a meme here, but I&amp;rsquo;ll tell you this: the experience is very similar to using Google Drive for collaborating on documents in real-time, so if you like this — you&amp;rsquo;ll surely like this real-time coding experience too!&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Pair_programming&#34;&gt;Pair programming&lt;/a&gt; on same git branch and code base is not something we usually do for various reasons, but if you like doing it, or you need to do it — I&amp;rsquo;d definitely recommend you Cloud9. You can pair program remotely just as you&amp;rsquo;d normally do on 1 computer: sharing terminal, files, git branches, etc.&lt;/p&gt;

&lt;p&gt;From these pair program opportunities come also very interesting education opportunities. For example, &lt;a href=&#34;https://cs50.harvard.edu/&#34;&gt;CS50&lt;/a&gt; and &lt;a href=&#34;https://www.freecodecamp.com/challenges/start-a-nodejs-server&#34;&gt;freeCodeCamp&lt;/a&gt;. These are good case studies of the cloud editor to encourage people of all walks of life to give programming a try and learn their &lt;a href=&#34;https://docs.c9.io/docs/supported-languages&#34;&gt;preferred programming language&lt;/a&gt; without any special computer hardware requirements, i.e. they can code real applications in the browser.&lt;/p&gt;

&lt;h3 id=&#34;collaboration-and-open-nbsp-source&#34;&gt;Collaboration and open&amp;nbsp;source&lt;/h3&gt;

&lt;p&gt;Because the service is free and very fun to use, it&amp;rsquo;s naturally an optional tool when working on various projects requiring tight collaboration such as open source projects.&lt;/p&gt;

&lt;p&gt;For example, I decided to work on &lt;a href=&#34;https://github.com/Surnet/swagger-jsdoc&#34;&gt;swagger-jsdoc&lt;/a&gt; node module which I used for a small project. All I had to do to make a pull request is:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Make a new workspace (new virtual machine in the cloud)&lt;/li&gt;
&lt;li&gt;Git clone the fork repository&lt;/li&gt;
&lt;li&gt;Create a new branch and do your task&lt;/li&gt;
&lt;li&gt;Push back to fork repository and open a pull request&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Note that I didn&amp;rsquo;t even have to install any software, all I had to make this contribution was to open my browser and use Cloud9 as a cloud service.&lt;/p&gt;

&lt;h3 id=&#34;keybindings&#34;&gt;Keybindings&lt;/h3&gt;

&lt;p&gt;These are some of the items I&amp;rsquo;m using quite often and sometimes get a WOW effect from people watching me doing things like that in my browser:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.c9.io/docs/multiple-cursors&#34;&gt;Multiple cursors&lt;/a&gt; (yep, &lt;a href=&#34;https://www.sublimetext.com/&#34;&gt;sublime&lt;/a&gt; is to blame for our expectations)&lt;/li&gt;
&lt;li&gt;Command line tricks work just well (Ctrl+U, Ctrl+L)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.c9.io/docs/keybindings&#34;&gt;Find in tree&lt;/a&gt; (and others)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.c9.io/docs/find-and-replacing-in-files#find-in-files&#34;&gt;Search/Find&lt;/a&gt; is handy working with namespaces&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I think normally people don&amp;rsquo;t expect a full IDE experience in the browser, as I didn&amp;rsquo;t too, and that&amp;rsquo;s the reason I mentioned Docked previously for an eye-opener. Just by the way, PHP developers might be even more surprised with things like &lt;a href=&#34;https://c9.io/blog/debug-your-php-code-with-xdebug-and-cloud9/&#34;&gt;xdebugger&lt;/a&gt; being available in their development environments.&lt;/p&gt;

&lt;h3 id=&#34;setting-up-drupal-nbsp-8&#34;&gt;Setting up Drupal&amp;nbsp;8&lt;/h3&gt;

&lt;p&gt;This might come even more shocking for people having an idea what &lt;a href=&#34;https://www.drupal.org/&#34;&gt;Drupal&lt;/a&gt; is. It&amp;rsquo;s an association of heavy CMS with high resource demand.&lt;/p&gt;

&lt;p&gt;Yet, do the following the sake of having your WOW moment yourself:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Create a new workspace based on &lt;a href=&#34;https://github.com/drupal-composer/drupal-project&#34;&gt;Drupal Composer&lt;/a&gt; github repository&lt;/li&gt;
&lt;li&gt;Follow the instructions to run an installation from the cli or the web (you might need to read &lt;a href=&#34;https://community.c9.io/t/setting-up-mysql/1718&#34;&gt;this MySQL&lt;/a&gt; article if you don&amp;rsquo;t have the idea to see your &lt;a href=&#34;https://help.ubuntu.com/community/EnvironmentVariables&#34;&gt;environment variables&lt;/a&gt; from the command line.&lt;/li&gt;
&lt;li&gt;Profit from having a running Drupal 8 which uses &lt;a href=&#34;https://getcomposer.org/&#34;&gt;Composer&lt;/a&gt; scripts for managing modules and dependencies to external libraries.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&#34;https://cdn-images-1.medium.com/max/800/1*12EXDc2rgRcy11wQk4SVjA.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Drupalaton 2016</title>
      <link>https://kalinchernev.github.io/drupalaton-2016/</link>
      <pubDate>Mon, 22 Aug 2016 00:00:00 +0200</pubDate>
      
      <guid>https://kalinchernev.github.io/drupalaton-2016/</guid>
      <description>

&lt;h3 id=&#34;introduction&#34;&gt;Introduction&lt;/h3&gt;

&lt;p&gt;Recently, I joined an event on &lt;a href=&#34;http://drupal.org&#34;&gt;Drupal&lt;/a&gt; in Hungary — the &lt;a href=&#34;http://drupalaton.hu&#34;&gt;Drupalaton&lt;/a&gt;. It is one of the most exciting yearly Drupal events in Europe, organized by the local community. It gathers hundreds of contributors who collaborate on Drupal issues, share knowledge and have fun together&amp;nbsp;:)&lt;/p&gt;

&lt;p&gt;I really enjoyed this year&amp;rsquo;s event since it covered a lot of my favorite topics. (discussed shortly after) Good sessions, pleasant talks with the community, and also — a lot of new things to learn. The event took place at the shore of the biggest warm-water lake in Europe, at Lake Balaton.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://cdn-images-1.medium.com/max/800/1*ME6rgg3pXT8oid14R5RNVg.jpeg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;sessions&#34;&gt;Sessions&lt;/h3&gt;

&lt;p&gt;Sure enough, sessions were covering important &lt;a href=&#34;https://www.drupal.org/8&#34;&gt;Drupal 8&lt;/a&gt; features. There were several tracks, as well as sprints, where participants were able to collaborate.&lt;/p&gt;

&lt;p&gt;I visited mainly the workshops related to the &lt;a href=&#34;http://buytaert.net/a-roadmap-for-making-drupal-more-api-first&#34;&gt;API-first initiative&lt;/a&gt;. This is a futuristic initiative, involving many JavaScript tools and modern concepts and practices for building service-oriented apps, not only websites.&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s a vital initiative for Drupal as a platform for the future. Presently, Drupal is one of the best systems for content modelling, querying, and building websites in general. This means that normal people can make websites with complex information structures with very little or no programming.&lt;/p&gt;

&lt;p&gt;The API-first initiative could potentially take Drupal into a place where &lt;strong&gt;the content modelling and querying becomes data modelling and querying, enabling non-developers to build complex APIs for the next generation apps.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Apart from these, there were also sessions about Drupal-specific modules being upgraded between Drupal 7 and 8. In overall, I think we&amp;rsquo;ll see more &amp;ldquo;good stuff&amp;rdquo; of &lt;a href=&#34;https://symfony.com/&#34;&gt;Symfony&lt;/a&gt;, PHP OOP, design patterns, etc topics during next Drupal events.&lt;/p&gt;

&lt;h3 id=&#34;workshops&#34;&gt;Workshops&lt;/h3&gt;

&lt;p&gt;This is my humble list of highlighted sessions I focused on.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://2016.drupalaton.hu/schedule#speaker-166&#34;&gt;&lt;strong&gt;REST APIs&lt;/strong&gt;&lt;/a&gt; by Pieter Frenssen (&lt;a href=&#34;https://www.drupal.org/u/pfrenssen&#34;&gt;pfrenssen&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://cdn-images-1.medium.com/max/800/1*4o8SJ8Q9EhrUt4fkz8DKpQ.jpeg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Well-formed, step-by-step guide, covering all important concepts of having Drupal as both server and/or a client in &lt;a href=&#34;http://www.restapitutorial.com/&#34;&gt;REST API architectures&lt;/a&gt;. If you want to skip the details in this section, check &lt;a href=&#34;https://www.drupal.org/developing/api/8/rest#practical&#34;&gt;Drupal REST API docs&lt;/a&gt; which covers great amount of information around the topic.&lt;/p&gt;

&lt;p&gt;The beginning was a general information about what REST actually is. This included status codes, methods, design patterns, etc.&lt;/p&gt;

&lt;p&gt;After presenting the basics, the next step was to use Drupal as a client, fetching data from &lt;a href=&#34;https://www.drupal.org/drupalorg/docs/api&#34;&gt;drupal.org REST API&lt;/a&gt; and displaying it in a block.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://hechoendrupal.gitbooks.io/drupal-console/content/en/commands/generate-plugin-block.html&#34;&gt;Creating a block with Drupal Console&lt;/a&gt; was super-easy. That was a really neat way to demonstrate injecting the &lt;a href=&#34;https://api.drupal.org/api/drupal/core%21lib%21Drupal.php/function/Drupal%3A%3AhttpClient/8.2.x&#34;&gt;http_client service&lt;/a&gt; via the cli from the &lt;a href=&#34;https://api.drupal.org/api/drupal/core!core.api.php/group/container/8.2.x&#34;&gt;container&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;There was also a demo of using the &lt;a href=&#34;https://www.drupal.org/documentation/modules/rest&#34;&gt;core REST API module&lt;/a&gt;, which transforms Drupal into an API server. &lt;a href=&#34;https://www.drupal.org/project/restui&#34;&gt;REST UI module&lt;/a&gt; was demonstrated as a site builders&amp;rsquo; tool to manage the configurations which are otherwise &lt;a href=&#34;https://www.chapterthree.com/blog/custom-restful-api-drupal-8&#34;&gt;managed through&amp;nbsp;.yml files&lt;/a&gt;. Here, it&amp;rsquo;s important to note, that the endpoints of the REST API are controllers. Developers have the freedom to choose which format of data to return and via which components. For example, one can use the &lt;a href=&#34;https://github.com/symfony/http-foundation&#34;&gt;Symfony&amp;rsquo;s HttpFoundation&lt;/a&gt; and its JsonResponse instance.&lt;/p&gt;

&lt;p&gt;In short, there was a lot of good advice, both about REST APIs in general, and Drupal-specific implementations, in combination with third-party tools and components.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://2016.drupalaton.hu/schedule#speaker-171&#34;&gt;&lt;strong&gt;Headless Drupal&lt;/strong&gt;&lt;/a&gt; by Ruben Teijeiro (&lt;a href=&#34;https://www.drupal.org/u/rteijeiro&#34;&gt;rteijeiro&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;Even though I did not attend the workshop, it was still part of the Drupal API-first series of topics. &lt;a href=&#34;https://github.com/rteijeiro/headless-drupal8&#34;&gt;Code of the session&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://2016.drupalaton.hu/schedule#speaker-106&#34;&gt;&lt;strong&gt;Progressive web apps&lt;/strong&gt;&lt;/a&gt; by Théodore Biadala (&lt;a href=&#34;https://www.drupal.org/u/nod_&#34;&gt;nod_&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;That was an intermediate-level session. &lt;a href=&#34;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Promise&#34;&gt;Promises&lt;/a&gt; were in the core of all code snippets and demonstrations. Highlight APIs: &lt;a href=&#34;https://developer.mozilla.org/en/docs/Web/API/Fetch_API&#34;&gt;Fetch API&lt;/a&gt;, &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/Cache&#34;&gt;Cache&lt;/a&gt;, &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers&#34;&gt;Service Workers&lt;/a&gt;, and &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API&#34;&gt;Web APIs&lt;/a&gt; in general. The main idea was to demonstrate how modern web APIs can be used to build web apps, having functionalities very similar to native apps.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/theodoreb/pwa-workshop&#34;&gt;The repository&lt;/a&gt; of the workshop is public, so go and check it for further details in case you&amp;rsquo;re interested into the interface implementations.&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s interesting to note the example of &lt;a href=&#34;https://github.com/theodoreb/pwa-workshop/blob/master/js/1-promise.js#L12&#34;&gt;promise-based&lt;/a&gt; &lt;a href=&#34;https://www.drupal.org/node/756722#behaviors&#34;&gt;behaviors system&lt;/a&gt;. A modernized implementation of classic concept on managing JavaScript.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://2016.drupalaton.hu/schedule#speaker-111&#34;&gt;&lt;strong&gt;GraphQL&lt;/strong&gt;&lt;/a&gt; by Sebastian Siemssen (&lt;a href=&#34;https://www.drupal.org/u/fubhy&#34;&gt;fubhy&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34; data-lang=&#34;en&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;The &lt;a href=&#34;https://twitter.com/hashtag/GraphQL?src=hash&#34;&gt;#GraphQL&lt;/a&gt; workshop w/ &lt;a href=&#34;https://twitter.com/thefubhy&#34;&gt;@thefubhy&lt;/a&gt;  at &lt;a href=&#34;https://twitter.com/hashtag/Drupalaton?src=hash&#34;&gt;#Drupalaton&lt;/a&gt; &lt;a href=&#34;https://t.co/AgfQGzCq81&#34;&gt;pic.twitter.com/AgfQGzCq81&lt;/a&gt;&lt;/p&gt;&amp;mdash; Kalin Chernev (@kalinchernev) &lt;a href=&#34;https://twitter.com/kalinchernev/status/764072778773344256&#34;&gt;August 12, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;Needless to say, that was the &amp;ldquo;cherry&amp;rdquo; session. It was about the &lt;a href=&#34;http://graphql.org/docs/getting-started/&#34;&gt;Facebook&amp;rsquo;s GraphQL&lt;/a&gt;, which developers were ready to understand, after touching upon REST APIs, JavaScript Frameworks, knowing what is a server and a client in general in the previous sessions.&lt;/p&gt;

&lt;p&gt;I personally enjoyed the workshop. In fact, I was even able follow along with the live coding on the main screen. It was also nice that it made a clear association between specification and language implementation. This means that same concepts of data architecture were demonstrated and practices with &lt;a href=&#34;https://github.com/graphql/express-graphql&#34;&gt;JavaScript&lt;/a&gt; and &lt;a href=&#34;https://github.com/Youshido/GraphQL&#34;&gt;PHP&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In the first part, the &lt;a href=&#34;https://github.com/graphql/swapi-graphql&#34;&gt;Star Wars API&lt;/a&gt; was used with the &lt;a href=&#34;http://graphql-swapi.parseapp.com/&#34;&gt;GraphiQL&lt;/a&gt; — a hands-on tutorial to &lt;a href=&#34;http://slides.com/sebastiansiemssen/graphql-meets-drupal-dd#/3/7&#34;&gt;understand the basic concepts&lt;/a&gt; like queries, fragments, variables, sub selections, etc.&lt;/p&gt;

&lt;p&gt;Second was the usage of node.js app with express, express-graphql, graphiql, graphql and other popular modules to transpile ES6 code. In this playground, the building part started. Various types were used: GraphQLSchema, GraphQLObjectType, GraphQLString, GraphQLInt, GraphQLNonNull, GraphQLList, etc. That was my first time to actually write something working out of the &lt;a href=&#34;https://learngraphql.com/&#34;&gt;learngraphql.com&lt;/a&gt; online tutorials.&lt;/p&gt;

&lt;p&gt;There was a demo of Relay in-between, as a bonus, to grab a general understanding of the additional features provided on top of the fundamental specification.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://cdn-images-1.medium.com/max/800/1*tpPTqCyZnfPqhb1er6ECpw.jpeg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;After the GraphQL implementation in JavaScript was getting convenient, then we continued using the same concepts, but to build a server in PHP and the &lt;a href=&#34;https://www.drupal.org/project/graphql&#34;&gt;Drupal GraphQL module&lt;/a&gt;. Sure enough, the approach was similar, but this time extending SchemaProviderBase and implementing framework-specific EntityTypeManager (&lt;a href=&#34;https://api.drupal.org/api/drupal/core%21lib%21Drupal%21Core%21Entity%21EntityTypeManagerInterface.php/interface/EntityTypeManagerInterface/8.2.x&#34;&gt;Interface&lt;/a&gt;) to manage &lt;a href=&#34;https://www.drupal.org/node/2192175&#34;&gt;Content Entity&lt;/a&gt; items.&lt;/p&gt;

&lt;h3 id=&#34;conclusions&#34;&gt;Conclusions&lt;/h3&gt;

&lt;p&gt;The event was awesome, the people were great, and the sessions were truly useful. I feel somehow privileged with the opportunity to attend such a good series of sessions related to API-s in the Drupal community!&lt;/p&gt;

&lt;p&gt;There are a lot of new technologies and tools to learn and play with. I hope the summary above is a good starter for anyone enthusiastic about the future of the tools mentioned.&lt;/p&gt;

&lt;h3 id=&#34;community&#34;&gt;Community&lt;/h3&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34; data-lang=&#34;en&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;End of the first day at &lt;a href=&#34;https://twitter.com/drupalaton&#34;&gt;@drupalaton&lt;/a&gt; we have a great dinner. &lt;a href=&#34;https://t.co/CN795wXixz&#34;&gt;pic.twitter.com/CN795wXixz&lt;/a&gt;&lt;/p&gt;&amp;mdash; 5NET Interactive (@5NEThu) &lt;a href=&#34;https://twitter.com/5NEThu/status/763818240954998789&#34;&gt;August 11, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;Many thanks to the local Drupal community in Hungary!&amp;nbsp;:)&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>