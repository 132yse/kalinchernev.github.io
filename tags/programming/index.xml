<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Programming on Kalin Chernev</title>
    <link>https://kalinchernev.github.io/tags/programming/index.xml</link>
    <description>Recent content in Programming on Kalin Chernev</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>All rights reserved - 2017</copyright>
    <atom:link href="https://kalinchernev.github.io/tags/programming/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Coding battle at Take Eat Easy</title>
      <link>https://kalinchernev.github.io/coding-battle-take-eat-easy/</link>
      <pubDate>Thu, 09 Jun 2016 00:00:00 +0200</pubDate>
      
      <guid>https://kalinchernev.github.io/coding-battle-take-eat-easy/</guid>
      <description>

&lt;p&gt;Short retrospective on my second coding competition with JavaScript. Lessons learned and thoughts on how to improve for the future.&lt;/p&gt;

&lt;h4 id=&#34;introduction&#34;&gt;Introduction&lt;/h4&gt;

&lt;p&gt;&lt;a href=&#34;http://www.takeeateasy.be/en/&#34;&gt;Take Eat Easy&lt;/a&gt; and &lt;a href=&#34;https://www.philos.io/&#34;&gt;Philos&lt;/a&gt; organized this coding competition.&lt;/p&gt;

&lt;p&gt;Similarly to &lt;a href=&#34;https://medium.com/@kalin.chernev/the-first-coding-battle-in-belgium-d4f4285ffb32#.ses1gau0l&#34;&gt;the first coding battle&lt;/a&gt;, good news from &lt;a href=&#34;https://twitter.com/maxczet&#34;&gt;Max&lt;/a&gt; came right from the beginning: the event was part of a hack league. For developers, this means that we can hope for continuity of the coding battles: more play, plus more opportunities to interact and share with others from the &lt;a href=&#34;https://twitter.com/jsl4b&#34;&gt;JavaScript community in Belgium&lt;/a&gt;. Few other cities have benefited from similar coding competitions: &lt;a href=&#34;https://twitter.com/maxczet/status/725623059344986112&#34;&gt;Paris&lt;/a&gt; and &lt;a href=&#34;https://twitter.com/maxczet/status/728555974672449536&#34;&gt;London&lt;/a&gt; recently, I am looking forward to see how the wave will grow even further&amp;nbsp;:)&lt;/p&gt;

&lt;p&gt;After this intro, &lt;a href=&#34;http://www.takeeateasy.be/en/about&#34;&gt;Jean-Christophe Libbrecht&lt;/a&gt; presented what Take Eat Easy is in simple words: delivery on time. &lt;a href=&#34;https://github.com/TakeEatEasy/hack-league&#34;&gt;The technical challenge&lt;/a&gt; was presented with focus on the same company values: optimal delivery management. I gotta say that I had a flashback to my university discipline of &lt;a href=&#34;https://en.wikipedia.org/wiki/Operations_research&#34;&gt;operations research&lt;/a&gt; for a minute, when thinking about routes and shortest distance. Luckily, the challenge was easier to understand than the academic subject!&lt;/p&gt;

&lt;p&gt;The overall atmosphere was agréable et la majorité parlèrent en français. Positive support and guidance was coming all the time.&lt;/p&gt;

&lt;h4 id=&#34;the-challenge&#34;&gt;The challenge&lt;/h4&gt;

&lt;p&gt;Quoting an abstract from the problem definition:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You play one of TEE&amp;rsquo;s bike courier&lt;/p&gt;

&lt;p&gt;Your goal is to make as much € as you can&lt;/p&gt;

&lt;p&gt;You compete with other couriers in the city&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&#34;https://cdn-images-1.medium.com/max/800/1*zt3n7YspKUDLmP8Q4lN5qw.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;So, participants had to program a courier bot, which plays with other courier bots in an imaginary city. Taking and delivering orders in an optimal way.&lt;/p&gt;

&lt;p&gt;An example &lt;a href=&#34;https://github.com/TakeEatEasy/hack-league/tree/master/node-client&#34;&gt;node client bot&lt;/a&gt; was given. I find it to be a good boilerplate for a start. Most importantly it&amp;rsquo;s clear where to include the custom logic and what are the tools to use to take actions.&lt;/p&gt;

&lt;p&gt;Another positive prerequisite was &lt;strong&gt;the sample state object&lt;/strong&gt;, which contained enough structure to understand the data that will be received by the client on every turn of the game. Note some important concepts are pretty obvious, I think: &lt;strong&gt;orders, possible actions and score&lt;/strong&gt;.&lt;/p&gt;

&lt;script src=&#34;https://gist.github.com/kalinchernev/d2d3e5e9ade9bca4f8ae94bc58dd5e88.js&#34;&gt;&lt;/script&gt;

&lt;p&gt;&lt;strong&gt;All possible actions&lt;/strong&gt; that the bots were able to play with: moving up/down/left/right, pick order, drop order. There were 2 advanced actions: upgrade fighter (be able to kick other players) and upgrade electric (move doubled).&lt;/p&gt;

&lt;p&gt;I will repeat this again, I was content with the organizers. Help was kindly provided, with hints and advice all the way during the game. That made it fun to play. (No matter the fact that my team didn&amp;rsquo;t manage to get points&amp;nbsp;:)&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://cdn-images-1.medium.com/max/800/1*641YUOoQZYNKW5N2d4G-kw.jpeg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h4 id=&#34;lessons-learned&#34;&gt;Lessons learned&lt;/h4&gt;

&lt;p&gt;I got a good &lt;a href=&#34;https://en.wikipedia.org/wiki/Pair_programming&#34;&gt;pair&lt;/a&gt; for the event. (&lt;a href=&#34;https://github.com/Gregoirevda&#34;&gt;Gregoirevda&lt;/a&gt;) I think we got along easily and we had good time working together. Here are some highlights of the informal retrospective we did after the game.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Visualize the end result (expectation) before going in the code&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We never ran the server &amp;ldquo;city&amp;rdquo; to see how our bot moves. That was not a clear problem until the end of the competition until when we were still working on the details on how to move our courier. &lt;a href=&#34;https://en.wikipedia.org/wiki/Grep&#34;&gt;Grep&lt;/a&gt;-ing the continuously changing state object helped us get some ideas about the dynamics, but honestly it was not easy to imagine how the courier bot is actually moving on the map without the real picture.&lt;/p&gt;

&lt;p&gt;Now I believe it&amp;rsquo;s important to run the server (mock) locally during development just to understand and visualize the dynamics as they will be in the real game.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Learn and understand the start examples and code samples&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In my first competition I made the mistake to try to understand the logic of the core engine (server) running the game, but this time was better focusing on the sample code. Yet, I think we missed useful points and functions that we could have utilized in our favor without thinking too much.&lt;/p&gt;

&lt;p&gt;More specifically, the head of the function that was invoked in every turn of the game contained the following:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;// Fetch my courier and possible order from the state  
var state = data.state;  
var possibleActions = data.possibleActions;  
var myCourier;  
var myOrder;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And guess what? That was prepared for us before-hand so that we could use these variables &amp;ldquo;as-is&amp;rdquo;. I have to say, I was mixing the &lt;code&gt;data&lt;/code&gt; and &lt;code&gt;state&lt;/code&gt; variables pretty much, but that&amp;rsquo;s another topic.&lt;/p&gt;

&lt;p&gt;Another part of the code contained this line:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;// Sample response.
respond(getDirection(data.possibleActions,myCourier.position,{x:1,y:2}));
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;getDirection()&lt;/code&gt; returns the best move depending on the current position and possible actions.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;respond()&lt;/code&gt; is the function to invoke in order to take actions.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;respond()&lt;/code&gt; took us away, because we decided to focus on the actions, and somehow it was pretty late in the game when we figured the getDirection() function for possible re-use.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Strategy and task separation&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Probably the most complex part of all.&lt;/p&gt;

&lt;p&gt;Even though we didn&amp;rsquo;t have clear strategy while developing the bot, it surely would have helped. For example, we started implementing functions for the bonus skills like having an electric bike and kicking other players before deciding how to move and take orders&amp;nbsp;:D&lt;/p&gt;

&lt;p&gt;But seriously, possible strategy for this challenge could probably be to separate the approach in 2: functions for working with distance, and such for working with actions. Though we didn&amp;rsquo;t manage to have a complete combination of actions based on distance and value, we spoke about the fact that we were not clear about the order of combined actions we need to take. We took a delivery and then we were just standing at a place, since the next step was not foreseen. However, we prepared to be able to kick other players just standing there with our delivery in our hands! (we never got the points for the advanced action of kicking)&lt;/p&gt;

&lt;p&gt;I feel that breaking down a challenge into small tasks plays an important role in problem solving, especially in short-time hack event. Also, event handling actions with state management seem to be recurring patterns, so it&amp;rsquo;s worth getting some more practice there too.&lt;/p&gt;

&lt;h4 id=&#34;coming-up&#34;&gt;Coming up&lt;/h4&gt;

&lt;p&gt;Many developers don&amp;rsquo;t go to competitions because they believe they are not good enough with JavaScript or they will not perform well in hack events under stress. Even though there is positive stress, with this retrospective and code samples I hope that I&amp;rsquo;ve managed to demonstrate that the challenge itself was doable and fun to do.&lt;/p&gt;

&lt;p&gt;The &lt;a href=&#34;https://www.eventbrite.com/e/coding-battle-microsoft-innovation-center-brussels-carasap-tickets-25839985091&#34;&gt;next coding battle will be at Microsoft&lt;/a&gt; and the event is open for registrations. I&amp;rsquo;d recommend you to grab the opportunity to broaden your experience.&lt;/p&gt;

&lt;p&gt;Lastly, consider inviting your colleagues to join you too. As you can imagine, the short hacking time will naturally give you ideas on how to communicate effectively with your colleagues when you work together in different environment. Also, you will see new ways to break down tasks and problem solve by observing and sharing with other developers you meet at the event.&lt;/p&gt;

&lt;h4 id=&#34;what-do-you-nbsp-think&#34;&gt;What do you&amp;nbsp;think?&lt;/h4&gt;

&lt;p&gt;I&amp;rsquo;m really interested to hear feedback on my thoughts and ideas about the code and the highlights. Maybe you have a different point of view? Share it in the comments!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Focus on community and good services</title>
      <link>https://kalinchernev.github.io/focus-community-good-services/</link>
      <pubDate>Mon, 11 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://kalinchernev.github.io/focus-community-good-services/</guid>
      <description>

&lt;h2 id=&#34;recap&#34;&gt;Recap&lt;/h2&gt;

&lt;p&gt;For me, 2015 was the toughest year in my life so far, and I liked it. It was amazing - full of mental and emotional challenges. I will remember 2015 as the year I started to see important details from the big picture, which I didn&amp;rsquo;t see before. I want to share about these details.&lt;/p&gt;

&lt;h4 id=&#34;the-big-picture&#34;&gt;The big picture&lt;/h4&gt;

&lt;p&gt;It&amp;rsquo;s very dynamic, because I relocated to Belgium, and that was the first time I had to deliberately synchronize &amp;ldquo;my world&amp;rdquo; with a new &amp;ldquo;other world&amp;rdquo;. Before, I&amp;rsquo;ve worked abroad for couple of months now and then, but I always had a return ticket, which was not the case this time.&lt;/p&gt;

&lt;p&gt;&amp;ldquo;My world&amp;rdquo; was pretty ok generally. In Bulgaria, I had a nice job as a web developer, I regularly did community work for Drupal Bulgaria foundation, giving out training and presentations now and then — I was pretty happy of myself to be honest, I felt on a track. Or a good level (it&amp;rsquo;s &amp;ldquo;the level&amp;rdquo; for developers, see).&lt;/p&gt;

&lt;p&gt;An year later, many details started to light up in the big picture, and I was not prepared, I didn&amp;rsquo;t feel ok. I had to focus more. I had high expectations about my level, so I started digging more into the specifics of how to be as good as I expect myself to be, compared to my previous life in Bulgaria.&lt;/p&gt;

&lt;p&gt;Focusing on the details of the big picture, I managed to see opportunities and good practices that I can conclude to be reusable for anyone. Reusable in such a way that even I will benefit of a given paradigm if I read it after few years.&lt;/p&gt;

&lt;h4 id=&#34;technology-and-code&#34;&gt;Technology and code&lt;/h4&gt;

&lt;p&gt;It&amp;rsquo;s always been and will be a lot about technology for me. Until 2015, I was very heavy enthusiast about &lt;a href=&#34;https://www.drupal.org/&#34;&gt;Drupal&lt;/a&gt;. There have been many big projects I&amp;rsquo;m proud of in the past. Working on big projects has always been a good way to battle-test good software as Drupal.&lt;/p&gt;

&lt;p&gt;Starting my new job in Belgium, I quickly realized how much I don&amp;rsquo;t know. Even bigger project, infrastructure complexity, i.e. higher demands for my developer skills. Something was going on in my brain, I started being less enthusiastic about the specific software package or tool, but I got more enthusiastic about the factors that make a project successful.&lt;/p&gt;

&lt;p&gt;My team was bigger and I had to learn new workflows, new tools and ways to communicate my personal beliefs about why a given solution is better than the other. &lt;strong&gt;I learned the hard way that good communication around issues improves results&lt;/strong&gt;. Sometimes even just looking at an issue from a perspective with good questions and communication, lead to solution without coding. Nothing new for communicators, but for hard-core devs: &lt;strong&gt;learn how to debate on your code solutions&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;It was also the first time to do peer reviews and anything else related to sitting down with another developer and showing my code. When I knew my code will be reviewed, I changed the way I express myself in code and started focusing also on beauty and technique, not only quick-fix. &lt;strong&gt;Writing code with aesthetics is good — the overall quality increases and it makes a given piece of work easier to validate.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I also started reading other developers&amp;rsquo; code more frequently. I guess it&amp;rsquo;s a natural reflex of comparing myself. &lt;strong&gt;Reading code from other developers turned so helpful — it&amp;rsquo;s like reading books, but more involving&lt;/strong&gt;.&lt;/p&gt;

&lt;h4 id=&#34;people-and-community&#34;&gt;People and community&lt;/h4&gt;

&lt;p&gt;At some point these small details started to shine. It was time to realize that no matter if I write JavaScript, PHP or any other programming language, a &lt;strong&gt;good project is not only about the code, but also about the human interaction around the code&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;I started joining code sprint, hack jams, issue queues in drupal.org, etc. I had the aha! moment that the human factor around code and software make the coding itself more fun. &lt;strong&gt;By collaborating with other developers in work, community and open source, I learned more times more than my previous level I had of 4 years of solo-learning.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I still have so much to learn about the good ways of interaction with other smart developers, but I&amp;rsquo;ve already hooked on my strong belief that healthy &lt;strong&gt;collaboration is the best way advance in any technology and project&lt;/strong&gt;. It&amp;rsquo;s not just about the software.&lt;/p&gt;

&lt;p&gt;Even more motivation was the end of the year, my team at the European Commission was awarded to be the best project team&amp;nbsp;:)&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://kalinchernev.github.io/images/best-team.jpeg&#34; alt=&#34;Best team&#34; /&gt;&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s pretty rewarding to be the best&amp;nbsp;:D&lt;/p&gt;

&lt;h4 id=&#34;what-about-2016&#34;&gt;What about 2016&lt;/h4&gt;

&lt;p&gt;For me, 2016 will most probably be the year of community and good service.&lt;/p&gt;

&lt;p&gt;Community, because it&amp;rsquo;s the hidden jam of happy coding and rapid self-development. Learning is faster, contribution is better, collaboration is fun.&lt;/p&gt;

&lt;p&gt;Good service, because it&amp;rsquo;s why we developers write code. It&amp;rsquo;s easy to lose focus from that because we have too many paradigms, frameworks and libraries to understand to be productive. Yet, we write code to make good products and provide good service.&lt;/p&gt;

&lt;p&gt;First come the good product and service, then the good results give the means of winning the time to try and use the latest cutting edge technologies.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>